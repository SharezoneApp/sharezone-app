# Copyright (c) 2022 Sharezone UG (haftungsbeschrÃ¤nkt)
# Licensed under the EUPL-1.2-or-later.
#
# You may obtain a copy of the Licence at:
# https://joinup.ec.europa.eu/software/page/eupl
#
# SPDX-License-Identifier: EUPL-1.2

# We are using Codemagic beside GitHub Actions for our mobile CI/CD.
#
# The "codemagic.yaml" allows us to configure workflows without using the
# UI-Editor. This has the advantage that changes are tracked in Git.
#
# You find the documentation about the codemagic.yaml here:
# https://docs.codemagic.io/yaml/yaml-getting-started/

# With "definitions" we are able to reuse code. Therefore, we can a script once
# and use reuse this script in other workflows without duplicating it. Just
# define a section with &NAME and use it with *NAME.
#
# Docs for definitions:
# https://docs.codemagic.io/yaml/yaml-getting-started/#reusing-sections
#
# Sample by Codemagic:
# https://github.com/codemagic-ci-cd/codemagic-sample-projects/blob/main/yaml/yaml_anchors_aliases_sample/codemagic.yaml

workflows:
  app-preview:
    name: App Preview
    max_build_duration: 75
    environment:
      xcode: 14.3
      groups:
        - github
        - ios-publishing
        - android_publishing
        - certificate_credentials
      vars:
        BUNDLE_ID: de.codingbrain.sharezone.app.dev
      # We won't use this Flutter version because we are going to download FVM
      # later and use the specified Flutter version in our repository.
      #
      # As predefined Flutter version we are using here the newest stable
      # version because this version is preinstalled on Codemagic VMs.
      flutter: stable
    working_directory: app
    scripts:
      - name: Install FVM
        # Settings working directory back to the root of the repository because
        # there is our .fvm folder with all the FVM configurations.
        working_directory: .
        script: |
          dart pub global activate fvm 2.4.1
          fvm install
      - name: iOS code signing
        script: |
          keychain initialize
          app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_ADHOC --create
          keychain add-certificates
          xcode-project use-profiles
      - name: Set up key properties (Android)
        script: |
          echo $FCI_KEYSTORE | base64 --decode > android/app/key.jks
          cat >> "android/key.properties" <<EOF
          storePassword=$FCI_KEYSTORE_PASSWORD
          keyPassword=$FCI_KEY_PASSWORD
          keyAlias=$FCI_KEY_ALIAS
          storeFile=key.jks
          EOF
      - name: Install dependencies
        script: fvm flutter pub get
      - name: Build APK
        script: |
          fvm flutter build apk \
            --flavor dev \
            --target lib/main_dev.dart
      - name: Build IPA
        script: |
          fvm flutter build ipa \
            --export-options-plist=/Users/builder/export_options.plist \
            --flavor dev \
            --target lib/main_dev.dart
    artifacts:
      - build/**/outputs/apk/**/*.apk
      - build/ios/ipa/*.ipa
    publishing:
      scripts:
        - name: Post App Preview
          script: |
            dart pub global activate codemagic_app_preview 0.0.3
            app_preview post --gh_token $GITHUB_PAT --message "_Note_: Only Sharezone team members are able to install the iOS app."

  macos-alpha:
    name: macOS Alpha
    max_build_duration: 100
    environment:
      xcode: latest
      groups:
        - ios-publishing
        - certificate_credentials
      vars:
        BUNDLE_ID: de.codingbrain.sharezone.app
    working_directory: app
    scripts:
      - name: Install FVM
        # Settings working directory back to the root of the repository because
        # there is our .fvm folder with all the FVM configurations.
        working_directory: .
        script: |
          dart pub global activate fvm 2.4.1
          fvm install
      - name: macOS code signing
        script: |
          app-store-connect fetch-signing-files $BUNDLE_ID \
            --platform IOS \
            --type MAC_APP_STORE \
            --create
            
          app-store-connect list-certificates --type MAC_APP_DISTRIBUTION --save || \
          app-store-connect create-certificate --type MAC_APP_DISTRIBUTION --save

          keychain initialize
          keychain add-certificates
          xcode-project use-profiles
      - name: Install dependencies
        script: |
          fvm flutter pub get
          find . -name "Podfile" -execdir pod install \;
      - name: Build macOS
        script: |
          # TEMP
          BUMPED_BUILD_NUMBER=442

          fvm flutter build macos \
            --release \
            --target lib/main_prod.dart \
            --dart-define DEVELOPMENT_STAGE=ALPHA \
            --build-number $BUMPED_BUILD_NUMBER
      - name: Package
        script: |
          # Package the app
          #
          # Copied from
          # https://docs.flutter.dev/deployment/macos#create-a-build-archive-with-codemagic-cli-tools
          APP_NAME=$(find $(pwd) -name "*.app")
          cd $(dirname "$APP_NAME")
          PACKAGE_NAME=$(basename "$APP_NAME" .app).pkg
          
          # Create an unsigned package
          xcrun productbuild --component "$APP_NAME" /Applications/ unsigned.pkg                 

          INSTALLER_CERT_NAME=$(keychain list-certificates \
                    | jq '[.[]
                      | select(.common_name
                      | contains("Mac Developer Installer"))
                      | .common_name][0]' \
                    | xargs)

          xcrun productsign --sign "$INSTALLER_CERT_NAME" unsigned.pkg "$PACKAGE_NAME"
    artifacts:
      - build/macos/**/*.pkg
      - build/macos/**/*.app
    publishing:
      app_store_connect:
        api_key: $APPLE_STORE_CONNECT_API_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: true
        submit_to_app_store: false
        beta_groups:
          - alpha
