// Mocks generated by Mockito 5.4.4 from annotations
// in sharezone/test_goldens/feedback/history/feedback_details_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:ui' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:sharezone/feedback/history/feedback_details_page_controller.dart'
    as _i3;
import 'package:sharezone/feedback/history/feedback_view.dart' as _i5;
import 'package:sharezone/feedback/src/api/feedback_api.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFeedbackApi_0 extends _i1.SmartFake implements _i2.FeedbackApi {
  _FakeFeedbackApi_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FeedbackDetailsPageController].
///
/// See the documentation for Mockito's code generation for more information.
class MockFeedbackDetailsPageController extends _i1.Mock
    implements _i3.FeedbackDetailsPageController {
  @override
  _i2.FeedbackApi get feedbackApi => (super.noSuchMethod(
        Invocation.getter(#feedbackApi),
        returnValue: _FakeFeedbackApi_0(
          this,
          Invocation.getter(#feedbackApi),
        ),
        returnValueForMissingStub: _FakeFeedbackApi_0(
          this,
          Invocation.getter(#feedbackApi),
        ),
      ) as _i2.FeedbackApi);
  @override
  _i3.FeedbackDetailsPageState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i4.dummyValue<_i3.FeedbackDetailsPageState>(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _i4.dummyValue<_i3.FeedbackDetailsPageState>(
          this,
          Invocation.getter(#state),
        ),
      ) as _i3.FeedbackDetailsPageState);
  @override
  set state(_i3.FeedbackDetailsPageState? _state) => super.noSuchMethod(
        Invocation.setter(
          #state,
          _state,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void loadFeedback(String? feedbackId) => super.noSuchMethod(
        Invocation.method(
          #loadFeedback,
          [feedbackId],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setFeedback(_i5.FeedbackView? feedback) => super.noSuchMethod(
        Invocation.method(
          #setFeedback,
          [feedback],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
